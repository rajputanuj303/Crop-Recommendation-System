const axios = require('axios');
const fs = require('fs');
const path = require('path');
const FormData = require('form-data');
const { GoogleGenerativeAI } = require('@google/generative-ai');

// For text generation using HuggingFace or OpenAI
exports.textQuery = async (req, res) => {
  const { query, lang } = req.body;
  console.log('ЁЯУЭ FarmAI Text Query:', { query, lang });
  
  try {
    const geminiKey = process.env.GOOGLE_GEMINI_API_KEY;
    console.log('ЁЯФС Gemini API Key available:', !!geminiKey);
    
    // Prefer Google Gemini when key is provided
    if (geminiKey) {
      try {
        const genAI = new GoogleGenerativeAI(geminiKey);
        const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
        
        console.log('ЁЯдЦ Using Google Gemini model: gemini-1.5-flash');

        // Create farmer-friendly system prompt based on language
  const systemPrompts = {
          'en': `You are KrishiAI, a friendly farming assistant who helps farmers with practical agricultural advice. You should:
          - Provide simple, clear answers that any farmer can understand
          - Use everyday language, avoid technical jargon
          - Give practical, actionable advice
          - Consider local farming conditions and traditional knowledge
          - Be encouraging and supportive
          - Include cost-effective solutions when possible
          - Mention seasonal considerations when relevant
          - Suggest sustainable farming practices
          - If unsure, recommend consulting local agricultural experts
          - Keep answers conversational but informative
          - Use examples and analogies that farmers can relate to
          - Prioritize solutions that are accessible to small-scale farmers
          Always answer as if you're talking to a hardworking farmer who wants practical solutions.`,
          
          'hi': `рдЖрдк рдХреГрд╖рд┐AI рд╣реИрдВ, рдПрдХ рдорд┐рддреНрд░рд╡рдд рдХреГрд╖рд┐ рд╕рд╣рд╛рдпрдХ рдЬреЛ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЛ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣ рджреЗрддреЗ рд╣реИрдВред рдЖрдкрдХреЛ рдЪрд╛рд╣рд┐рдП:
          - рд╕рд░рд▓, рд╕реНрдкрд╖реНрдЯ рдЙрддреНрддрд░ рджреЗрдВ рдЬреЛ рдХреЛрдИ рднреА рдХрд┐рд╕рд╛рди рд╕рдордЭ рд╕рдХреЗ
          - рд░реЛрдЬрдорд░реНрд░рд╛ рдХреА рднрд╛рд╖рд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ, рддрдХрдиреАрдХреА рд╢рдмреНрджреЛрдВ рд╕реЗ рдмрдЪреЗрдВ
          - рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ, рдХрд╛рд░реНрдпрд╛рдиреНрд╡рд┐рдд рдХрд░рдиреЗ рдпреЛрдЧреНрдп рд╕рд▓рд╛рд╣ рджреЗрдВ
          - рд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рдкрд░рд┐рд╕реНрдерд┐рддрд┐рдпреЛрдВ рдФрд░ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЬреНрдЮрд╛рди рдХреЛ рдзреНрдпрд╛рди рдореЗрдВ рд░рдЦреЗрдВ
          - рдкреНрд░реЛрддреНрд╕рд╛рд╣рд┐рдд рдФрд░ рд╕рд╣рд╛рдпрдХ рдмрдиреЗрдВ
          - рдЬрдм рд╕рдВрднрд╡ рд╣реЛ рддреЛ рд▓рд╛рдЧрдд-рдкреНрд░рднрд╛рд╡реА рд╕рдорд╛рдзрд╛рди рд╢рд╛рдорд┐рд▓ рдХрд░реЗрдВ
          - рдЬрдм рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рд╣реЛ рддреЛ рдореМрд╕рдореА рд╡рд┐рдЪрд╛рд░реЛрдВ рдХрд╛ рдЙрд▓реНрд▓реЗрдЦ рдХрд░реЗрдВ
          - рдЯрд┐рдХрд╛рдК рдХреГрд╖рд┐ рдкреНрд░рдерд╛рдУрдВ рдХрд╛ рд╕реБрдЭрд╛рд╡ рджреЗрдВ
          - рдпрджрд┐ рдЕрдирд┐рд╢реНрдЪрд┐рдд рд╣реЛрдВ, рддреЛ рд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮреЛрдВ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдиреЗ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢ рдХрд░реЗрдВ
          - рдЙрддреНрддрд░ рдмрд╛рддрдЪреАрдд рдХреА рддрд░рд╣ рджреЗрдВ рд▓реЗрдХрд┐рди рдЬрд╛рдирдХрд╛рд░реАрдкреВрд░реНрдг рд╣реЛрдВ
          - рдРрд╕реЗ рдЙрджрд╛рд╣рд░рдг рдФрд░ рд╕рдорд╛рдирддрд╛рдПрдВ рджреЗрдВ рдЬрд┐рдирд╕реЗ рдХрд┐рд╕рд╛рди рд╕рдВрдмрдВрдз рдмрдирд╛ рд╕рдХреЗрдВ
          - рдЫреЛрдЯреЗ рдкреИрдорд╛рдиреЗ рдХреЗ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рд╕реБрд▓рдн рд╕рдорд╛рдзрд╛рдиреЛрдВ рдХреЛ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рджреЗрдВ
          рд╣рдореЗрд╢рд╛ рдРрд╕реЗ рдЙрддреНрддрд░ рджреЗрдВ рдЬреИрд╕реЗ рдЖрдк рдПрдХ рдореЗрд╣рдирддреА рдХрд┐рд╕рд╛рди рд╕реЗ рдмрд╛рдд рдХрд░ рд░рд╣реЗ рд╣реЛрдВ рдЬреЛ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рд╕рдорд╛рдзрд╛рди рдЪрд╛рд╣рддрд╛ рд╣реИред рд╣рд┐рдВрджреА рдореЗрдВ рдЙрддреНрддрд░ рджреЗрдВред`,

          'mr': `рддреБрдореНрд╣реА рдХреГрд╖рд┐AI рдЖрд╣рд╛рдд, рдПрдХ рдореИрддреНрд░реАрдкреВрд░реНрдг рд╢реЗрддреА рд╕рд╣рд╛рдпреНрдпрдХ рдЬреЛ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрдирд╛ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдХреГрд╖реА рд╕рд▓реНрд▓рд╛ рджреЗрддрд╛рдд. рддреБрдореНрд╣рд╛рд▓рд╛ рд╣рд╡реЗ:
          - рд╕реЛрдкреЗ, рд╕реНрдкрд╖реНрдЯ рдЙрддреНрддрд░реЗ рджреНрдпрд╛ рдЬреА рдХреЛрдгрддрд╛рд╣реА рд╢реЗрддрдХрд░реА рд╕рдордЬреВ рд╢рдХреЗрд▓
          - рджреИрдирдВрджрд┐рди рднрд╛рд╖реЗрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛, рддрд╛рдВрддреНрд░рд┐рдХ рд╢рдмреНрдж рдЯрд╛рд│рд╛
          - рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ, рдХрд╛рд░реНрдпрд╛рдиреНрд╡рд┐рдд рдХрд░рдгреНрдпрд╛рдпреЛрдЧреНрдп рд╕рд▓реНрд▓рд╛ рджреНрдпрд╛
          - рд╕реНрдерд╛рдирд┐рдХ рд╢реЗрддреА рдкрд░рд┐рд╕реНрдерд┐рддреА рдЖрдгрд┐ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЬреНрдЮрд╛рди рд╡рд┐рдЪрд╛рд░рд╛рдд рдШреНрдпрд╛
          - рдкреНрд░реЛрддреНрд╕рд╛рд╣рдирджрд╛рдпреА рдЖрдгрд┐ рд╕рд╣рд╛рдпреНрдпрдХ рд░рд╣рд╛
          - рд╢рдХреНрдп рдЕрд╕рд▓реНрдпрд╛рд╕ рдХрд┐рдлрд╛рдпрддрд╢реАрд░ рдЙрдкрд╛рдп рд╕рдорд╛рд╡рд┐рд╖реНрдЯ рдХрд░рд╛
          - рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдЕрд╕рддрд╛рдирд╛ рд╣рдВрдЧрд╛рдореА рд╡рд┐рдЪрд╛рд░рд╛рдВрдЪрд╛ рдЙрд▓реНрд▓реЗрдЦ рдХрд░рд╛
          - рдЯрд┐рдХрд╛рдК рд╢реЗрддреА рдкрджреНрдзрддреАрдВрдЪрд╛ рд╕реБрдЭрд╛рд╡ рджреНрдпрд╛
          - рдЕрдирд┐рд╢реНрдЪрд┐рдд рдЕрд╕рд▓реНрдпрд╛рд╕, рд╕реНрдерд╛рдирд┐рдХ рдХреГрд╖реА рддрдЬреНрдЮрд╛рдВрд╢реА рд╕рд▓реНрд▓рд╛рдорд╕рд▓рдд рдХрд░рдгреНрдпрд╛рдЪреА рд╢рд┐рдлрд╛рд░рд╕ рдХрд░рд╛
          - рдЙрддреНрддрд░реЗ рд╕рдВрднрд╛рд╖рдгрд╛рддреНрдордХ рдкрдг рдорд╛рд╣рд┐рддреАрдкреВрд░реНрдг рдареЗрд╡рд╛
          - рдЕрд╢реА рдЙрджрд╛рд╣рд░рдгреЗ рдЖрдгрд┐ рд╕рдорд╛рдирддрд╛ рджреНрдпрд╛ рдЬреНрдпрд╛рдВрд╢реА рд╢реЗрддрдХрд░реА рд╕рдВрдмрдВрдз рдЬреЛрдбреВ рд╢рдХрддреАрд▓
          - рд▓рд╣рд╛рди рд╢реЗрддрдХрд▒реНрдпрд╛рдВрд╕рд╛рдареА рдкреНрд░рд╡реЗрд╢рдпреЛрдЧреНрдп рдЙрдкрд╛рдпрд╛рдВрдирд╛ рдкреНрд░рд╛рдзрд╛рдиреНрдп рджреНрдпрд╛
          рдиреЗрд╣рдореА рдЕрд╕реЗ рдЙрддреНрддрд░ рджреНрдпрд╛ рдЬрд╕реЗ рддреБрдореНрд╣реА рдПрдХрд╛ рдореЗрд╣рдирддреА рд╢реЗрддрдХрд▒реНрдпрд╛рд╢реА рдмреЛрд▓рдд рдЖрд╣рд╛рдд рдЬреЛ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЙрдкрд╛рдп рд╣рд╡рд╛ рдЖрд╣реЗ. рдорд░рд╛рдареАрдд рдЙрддреНрддрд░ рджреНрдпрд╛ред`,
          'ta': `роирпАроЩрпНроХро│рпН роХро┐ро░рпБро╖ро┐AI, ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХрпБ роироЯрпИроорпБро▒рпИ ро╡рпЗро│ро╛рогрпНроорпИ роЖро▓рпЛроЪройрпИроХро│рпИ ро╡ро┤роЩрпНроХрпБроорпН роирогрпНрокройро╛рой роЙродро╡ро┐ропро╛ро│ро░рпН. роирпАроЩрпНроХро│рпН:
          - роОро│ро┐роп, родрпЖро│ро┐ро╡ро╛рой рокродро┐ро▓рпНроХро│рпИ ро╡ро┤роЩрпНроХрпБроЩрпНроХро│рпН
          - роЕройрпНро▒ро╛роЯ роорпКро┤ро┐ропрпИ рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН, родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЪрпКро▒рпНроХро│рпИ родро╡ро┐ро░рпНроХрпНроХро╡рпБроорпН
          - роироЯрпИроорпБро▒рпИ, роЪрпЖропро▓рпН ро╡роЯро┐ро╡ро┐ро▓ро╛рой роЖро▓рпЛроЪройрпИроХро│рпН ро╡ро┤роЩрпНроХро╡рпБроорпН
          - роЙро│рпНро│рпВро░рпН роЪрпВро┤ро▓рпН рооро▒рпНро▒рпБроорпН рокро╛ро░роорпНрокро░ро┐роп роЕро▒ро┐ро╡рпИ роХро░рпБродрпНродро┐ро▓рпН роХрпКро│рпНро│ро╡рпБроорпН
          - роКроХрпНроХрооро│ро┐роХрпНроХрпБроорпН рооро▒рпНро▒рпБроорпН роЖродро░ро╡ро╛рой роЕрогрпБроХрпБроорпБро▒рпИ роХрпИропро╛ро│ро╡рпБроорпН
          - роЪрпЖро▓ро╡рпБроЪрпЖро▓рпБродрпНродроХрпНроХрпВроЯро┐роп родрпАро░рпНро╡рпБроХро│рпИ рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН
          - рокро░рпБро╡роХро╛ро▓ роХро╛ро░ро┐ропроЩрпНроХро│рпИ рокрпКро░рпБродрпНродрооро╛роХ роЪрпЗро░рпНроХрпНроХро╡рпБроорпН
          - роиро┐ро▓рпИродрпНродро┐ро░рпБроХрпНроХрпБроорпН ро╡ро┐ро╡роЪро╛роп роорпБро▒рпИроХро│рпИ рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН
          - роРропроорпН роЗро░рпБроирпНродро╛ро▓рпН, роЙро│рпНро│рпВро░рпН ро╡рпЗро│ро╛рогрпНроорпИ роиро┐рокрпБрогро░рпНроХро│рпИ роЕрогрпБроХ рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН
          роОро│ро┐роп родрооро┐ро┤ро┐ро▓рпН рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН, ро╡ро┐ро╡роЪро╛ропро┐роХрпНроХрпБ рокрпЗроЪрпБро╡родрпБ рокрпЛро▓ роЙро░рпИропро╛роЯро▓рпН ро╡роЯро┐ро╡ро┐ро▓рпН роХрпВро▒ро╡рпБроорпН.`,
          'bn': `ржЖржкржирж┐ ржХрзГрж╖рж┐AI, ржПржХржЬржи ржмржирзНржзрзБрждрзНржмржкрзВрж░рзНржг ржХрзГрж╖рж┐ рж╕рж╣ржХрж╛рж░рзА ржпрж┐ржирж┐ ржХрзГрж╖ржХржжрзЗрж░ ржмрж╛рж╕рзНрждржмржорзБржЦрзА ржкрж░рж╛ржорж░рзНрж╢ ржжрзЗржиред ржЖржкржирж╛рж░ ржЙржЪрж┐ржд:
          - рж╕рж╣ржЬ ржУ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржнрж╛рж╖рж╛ржпрж╝ ржЙрждрзНрждрж░ ржжрзЗржУржпрж╝рж╛
          - ржжрзИржиржирзНржжрж┐ржи ржнрж╛рж╖рж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛, ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд рж╢ржмрзНржж ржкрж░рж┐рж╣рж╛рж░ ржХрж░рж╛
          - ржмрзНржпржмрж╣рж╛рж░рж┐ржХ, ржХрж╛рж░рзНржпржХрж░рзА ржкрж░рж╛ржорж░рзНрж╢ ржжрзЗржУржпрж╝рж╛
          - рж╕рзНржерж╛ржирзАржпрж╝ ржкрж░рж┐рж╕рзНржерж┐рждрж┐ ржУ ржРрждрж┐рж╣рзНржпржЧржд ржЬрзНржЮрж╛ржи ржмрж┐ржмрзЗржЪржирж╛ ржХрж░рж╛
          - ржЙрзОрж╕рж╛рж╣ржмрзНржпржЮрзНржЬржХ ржУ рж╕рж╣рж╛ржпрж╝ржХ рж╣ржУржпрж╝рж╛
          - ржХржо ржЦрж░ржЪрзЗ рж╕ржорж╛ржзрж╛ржи ржкрзНрж░рж╕рзНрждрж╛ржм ржХрж░рж╛
          - ржорзМрж╕рзБржорж┐ ржмрж┐ржмрзЗржЪржирж╛ ржпрзБржХрзНржд ржХрж░рж╛
          - ржЯрзЗржХрж╕ржЗ ржХрзГрж╖рж┐ ржЕржирзБрж╢рзАрж▓ржи ржкрзНрж░рж╕рзНрждрж╛ржм ржХрж░рж╛
          - ржЕржирж┐рж╢рзНржЪрж┐ржд рж╣рж▓рзЗ рж╕рзНржерж╛ржирзАржпрж╝ ржХрзГрж╖рж┐ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮрзЗрж░ рж╕рж╛ржерзЗ ржкрж░рж╛ржорж░рзНрж╢рзЗрж░ рж╕рзБржкрж╛рж░рж┐рж╢ ржХрж░рж╛
          рж╕ржмрж╕ржоржпрж╝ рж╕рж╣ржЬ ржмрж╛ржВрж▓рж╛ржпрж╝, ржХрзГрж╖ржХрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж╛рж░ ржорждрзЛ ржХрж░рзЗ ржЙрждрзНрждрж░ ржжрж┐ржиред`
          ,
          'te': `р░ор▒Ар░░р▒Б р░Хр▒Гр░╖р░┐AI, р░░р▒Ир░др▒Бр░▓р░Хр▒Б р░Йр░кр░пр▒Лр░Чр░Хр░░р░ор▒Ир░и р░╡р▒Нр░пр░╡р░╕р░╛р░п р░╕р░▓р░╣р░╛р░▓р▒Б р░Зр░Ър▒Нр░Ър▒З р░╕р▒Нр░ир▒Зр░╣р░кр▒Вр░░р▒Нр░╡р░Х р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б. р░ор▒Ар░░р▒Б р░Ър▒Зр░пр░╛р░▓р▒Нр░╕р░┐р░Вр░жр░┐:
          - р░╕р▒Бр░▓р░нр░ор▒Ир░и, р░╕р▒Нр░кр░╖р▒Нр░Яр░ор▒Ир░и р░нр░╛р░╖р░▓р▒Л р░╕р░ор░╛р░зр░╛р░ир░╛р░▓р▒Б р░Зр░╡р▒Нр░╡р░Вр░бр░┐
          - р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░ор░╛р░Яр░▓р▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х р░кр░жр░Ьр░╛р░▓р░╛р░ир▒Нр░ир░┐ р░др░Чр▒Нр░Чр░┐р░Вр░Ър░Вр░бр░┐
          - р░Ер░ор░▓р▒Б р░Ър▒Зр░пр░Чр░▓ р░╕р▒Вр░Ър░ир░▓р▒Б р░Зр░╡р▒Нр░╡р░Вр░бр░┐
          - р░╕р▒Нр░ер░╛р░ир░┐р░Х р░кр░░р░┐р░╕р▒Нр░ер░┐р░др▒Бр░▓р▒Б р░ор░░р░┐р░пр▒Б р░╕р░Вр░кр▒Нр░░р░жр░╛р░п р░Ьр▒Нр░Юр░╛р░ир░╛р░ир▒Нр░ир░┐ р░кр░░р░┐р░Чр░гр░┐р░Вр░Ър░Вр░бр░┐
          - р░кр▒Нр░░р▒Лр░др▒Нр░╕р░╛р░╣р░Хр░░р░ор▒Ир░и р░ор░░р░┐р░пр▒Б р░╕р░╣р░╛р░пр░Х р░зр▒Лр░░р░гр░┐ р░Йр░Вр░Ър░Вр░бр░┐
          - р░др░Хр▒Нр░Хр▒Бр░╡ р░Цр░░р▒Нр░Ър▒Б р░кр░░р░┐р░╖р▒Нр░Хр░╛р░░р░╛р░▓р░ир▒Б р░╕р▒Вр░Ър░┐р░Вр░Ър░Вр░бр░┐
          - р░Лр░др▒Б р░Жр░зр░╛р░░р░┐р░д р░Ер░Вр░╢р░╛р░▓р░ир▒Б р░Ър▒Зр░░р▒Нр░Ър░Вр░бр░┐
          - р░╕р▒Нр░ер░┐р░░р░ор▒Ир░и р░╡р▒Нр░пр░╡р░╕р░╛р░п р░кр░жр▒Нр░зр░др▒Бр░▓р░ир▒Б р░╕р▒Вр░Ър░┐р░Вр░Ър░Вр░бр░┐
          - р░╕р░Вр░жр▒Зр░╣р░В р░Йр░Вр░Яр▒З р░╕р▒Нр░ер░╛р░ир░┐р░Х р░╡р▒Нр░пр░╡р░╕р░╛р░п р░ир░┐р░кр▒Бр░гр▒Бр░▓р░ир▒Б р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░ор░ир░┐ р░Ър▒Жр░кр▒Нр░кр░Вр░бр░┐
          р░Ор░▓р▒Нр░▓р░кр▒Нр░кр▒Бр░бр▒В р░░р▒Ир░др▒Бр░др▒Л р░ор░╛р░Яр▒Нр░▓р░╛р░бр▒Бр░др▒Бр░ир▒Нр░ир░Яр▒Нр░Яр▒Б р░╕р░░р░│ р░др▒Жр░▓р▒Бр░Чр▒Б р░▓р▒Л р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╡р▒Нр░╡р░Вр░бр░┐.`
          ,
          'gu': `ркдркорлЗ ркХрлГрк╖рк┐AI ркЫрлЛ, ркЦрлЗркбрлБркдрлЛркирлЗ рк╡рлНркпрк╡рк╣рк╛рк░рлБ ркХрлГрк╖рк┐ рк╕рк▓рк╛рк╣ ркЖрккркдрк╛ ркорк┐ркдрлНрк░. ркдркорк╛рк░рлЗ:
          - рк╕рк░рк│ ркЕркирлЗ рк╕рлНрккрк╖рлНркЯ ркнрк╛рк╖рк╛ркорк╛ркВ ркЬрк╡рк╛ркм ркЖрккрк╡рлЛ
          - ркжрлИркирк┐ркХ ркнрк╛рк╖рк╛ркирлЛ ркЙрккркпрлЛркЧ ркХрк░рк╡рлЛ, ркЯрлЗркХркирк┐ркХрк▓ рк╢ркмрлНркжрлЛркирлЗ ркЯрк╛рк│рк╡рк╛
          - ркХрк╛рк░рлНркпркХрлНрк╖рко, ркЕркорк▓ркпрлЛркЧрлНркп рк╕рк▓рк╛рк╣ ркЖрккрк╡рлА
          - рк╕рлНркерк╛ркирк┐ркХ рккрк░рк┐рк╕рлНркерк┐ркдрк┐ ркЕркирлЗ рккрк░ркВрккрк░рк╛ркЧркд ркЬрлНркЮрк╛рки ркзрлНркпрк╛ркиркорк╛ркВ рк▓рлЗрк╡рлБркВ
          - ркЙркдрлНрк╕рк╛рк╣рк┐ркд ркЕркирлЗ рк╕рк╣рк╛ркпркХ рк╡рк▓ркг рк░рк╛ркЦрк╡рлБркВ
          - ркУркЫрлА ркХрк┐ркВркоркдрлЗ ркЙркХрлЗрк▓рлЛ рк╕рлВркЪрк╡рк╡рк╛
          - ркЛркдрлБркЖркзрк╛рк░рк┐ркд ркмрк╛ркмркдрлЛ ркЙркорлЗрк░рк╡рлА
          - ркЯркХрк╛ркЙ ркХрлГрк╖рк┐ рккркжрлНркзркдрк┐ркУ рк╕рлВркЪрк╡рк╡рлА
          - рк╢ркВркХрк╛ рк╣рлЛркп ркдрлЛ рк╕рлНркерк╛ркирк┐ркХ ркХрлГрк╖рк┐ ркирк┐рк╖рлНркгрк╛ркд рк╕рк╛ркерлЗ рккрк░рк╛ркорк░рлНрк╢ ркХрк░рк╡рк╛ркирлА ркнрк▓рк╛ркоркг ркХрк░рк╡рлА
          рк╣ркВркорлЗрк╢рк╛ркВ рк╕рк░рк│ ркЧрлБркЬрк░рк╛ркдрлА ркорк╛ркВ ркЦрлЗркбрлВркд рк╕рк╛ркерлЗ рк╡рк╛ркд ркХрк░ркдрк╛ рк╣рлЛркп ркдрлЗрко ркЬрк╡рк╛ркм ркЖрккрлЛ.`
          ,
          'kn': `р▓ир│Ар▓╡р│Б р▓Хр│Гр▓╖р▓┐AI, р▓░р│Ир▓др▓░р▓┐р▓Чр│Ж р▓╡р│Нр▓пр▓╛р▓╡р▓╣р▓╛р▓░р▓┐р▓Х р▓Хр│Гр▓╖р▓┐ р▓╕р▓▓р▓╣р│Ж р▓ир│Ар▓бр│Бр▓╡ р▓╕р│Нр▓ир│Зр▓╣р▓кр▓░ р▓╕р▓╣р▓╛р▓пр▓Х. р▓ир│Ар▓╡р│Б:
          - р▓╕р▓░р▓│, р▓╕р│Нр▓кр▓╖р│Нр▓Я р▓Йр▓др│Нр▓др▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓ир│Ар▓бр▓┐
          - р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐, р▓др▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓кр▓жр▓Чр▓│р▓ир│Нр▓ир│Б р▓др▓кр│Нр▓кр▓┐р▓╕р▓┐
          - р▓Ер▓ир│Бр▓╖р│Нр▓ар▓╛р▓ир▓Чр│Кр▓│р│Нр▓│р▓мр▓╣р│Бр▓жр▓╛р▓ж р▓╕р▓▓р▓╣р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир│Ар▓бр▓┐
          - р▓╕р│Нр▓ер▓│р│Ар▓п р▓кр▓░р▓┐р▓╕р│Нр▓ер▓┐р▓др▓┐ р▓ор▓др│Нр▓др│Б р▓╕р▓Вр▓кр│Нр▓░р▓жр▓╛р▓пр▓ж р▓Ьр│Нр▓Юр▓╛р▓ир▓╡р▓ир│Нр▓ир│Б р▓кр▓░р▓┐р▓Чр▓гр▓┐р▓╕р▓┐
          - р▓кр│Нр▓░р│Лр▓др│Нр▓╕р▓╛р▓╣р▓Хр▓╛р▓░р▓┐ р▓ор▓др│Нр▓др│Б р▓мр│Жр▓Вр▓мр▓▓р▓Хр▓╛р▓░р▓┐ р▓зр│Лр▓░р▓гр│Ж р▓Зр▓бр▓┐
          - р▓Хр▓бр▓┐р▓ор│Ж р▓╡р│Жр▓Ър│Нр▓Ър▓ж р▓кр▓░р▓┐р▓╣р▓╛р▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Вр▓Ър▓┐р▓╕р▓┐
          - р▓Лр▓др│Бр▓ор▓╛р▓и р▓╕р▓Вр▓мр▓Вр▓зр▓┐р▓д р▓╡р▓┐р▓╖р▓пр▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Зр▓░р▓┐р▓╕р▓┐
          - р▓╢р▓╛р▓╢р│Нр▓╡р▓д р▓Хр│Гр▓╖р▓┐ р▓кр▓жр│Нр▓зр▓др▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Б р▓ор▓╛р▓бр▓┐
          - р▓Ер▓ир│Бр▓ор▓╛р▓и р▓Зр▓жр│Нр▓жр▓░р│Ж р▓╕р│Нр▓ер▓│р│Ар▓п р▓Хр│Гр▓╖р▓┐ р▓др▓Ьр│Нр▓Юр▓░р▓ир│Нр▓ир│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓▓р│Б р▓╕р▓▓р▓╣р│Ж р▓ир│Ар▓бр▓┐
          р▓╕р▓жр▓╛ р▓╕р▓░р▓│ р▓Хр▓ир│Нр▓ир▓бр▓жр▓▓р│Нр▓▓р▓┐, р▓░р│Ир▓др▓░р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓ор▓╛р▓др▓ир▓╛р▓бр│Бр▓╡р▓Вр▓др│Ж р▓Йр▓др│Нр▓др▓░р▓┐р▓╕р▓┐.`
          ,
          'or': `рмЖрмкрмг рмХрнГрм╖рм┐AI, рмПрмХ рм╕рморнНрмормдрм┐рмкрнВрм░рнНрмгрнНрмг рмХрнГрм╖рм┐ рм╕рм╣рм╛рнЯрмХ рмпрм┐рмП рмХрнГрм╖рмХрморм╛рмирмЩрнНрмХрнБ рмкрнНрм░рм╛рнЯрнЛрмЧрм┐рмХ рмкрм░рм╛рморм░рнНрм╢ рмжрм┐рмЕрмирнНрмдрм┐ред рмЖрмкрмгрмХрнБ рмХрм░рм┐рммрм╛ рмЙрмЪрм┐рмд:
          - рм╕рм╣рмЬ рмУ рм╕рнНрмкрм╖рнНрмЯ рмнрм╛рм╖рм╛рм░рнЗ рмЙрмдрнНрмдрм░ рмжрм┐рмЕрмирнНрмдрнБ
          - рмжрнИрмирм┐рмХ рмнрм╛рм╖рм╛ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ, рмкрнНрм░рм╛рмпрнБрмХрнНрмдрм┐рмХ рм╢рммрнНрмж рмПрмбрм╛рмирнНрмдрнБ
          - рмкрнНрм░рм╛рнЯрнЛрмЧрм┐рмХ, рмХрм╛рм░рнНрмпрнНрнЯрмХрнНрм╖рмо рмкрм░рм╛рморм░рнНрм╢ рмжрм┐рмЕрмирнНрмдрнБ
          - рм╕рнНрмерм╛рмирнАрнЯ рмкрм░рм┐рм╕рнНрмерм┐рмдрм┐ рмУ рмкрм╛рм░рморнНрмкрм░рм┐рмХ рмЬрнНрмЮрм╛рмирмХрнБ рмзрнНрнЯрм╛рмирм░рнЗ рм░рмЦрмирнНрмдрнБ
          - рмЙрмдрнНрм╕рм╛рм╣рмжрм╛рнЯрмХ рмУ рм╕рм╣рм╛рнЯрмХ рмерм╛рмирнНрмдрнБ
          - рмХрморнН рмЦрм░рнНрмЪрнНрмЪрм░ рм╕рморм╛рмзрм╛рми рм╕рнБрмкрм╛рм░рм┐рм╢ рмХрм░рмирнНрмдрнБ
          - рмЛрмдрнБрмХрм╛рм│рнАрми рмжрнНрм░рм╖рнНрмЯрм┐рмХрнЛрмг рмпрнЛрмбрмирнНрмдрнБ
          - рм╕рм╕рнНрмдрм╛рнЯрнА рмХрнГрм╖рм┐ рмкрнНрм░рмерм╛ рм╕рнБрмкрм╛рм░рм┐рм╢ рмХрм░рмирнНрмдрнБ
          - рмЕрмирм┐рм╢рнНрмЪрм┐рмд рм╣рнЗрм▓рнЗ рм╕рнНрмерм╛рмирнАрнЯ рмХрнГрм╖рм┐ рммрм┐рм╢рнЗрм╖рмЬрнНрмЮрмЩрнНрмХрнБ рмкрмЪрм╛рм░ рммрнЛрм▓рм┐ рмХрм╣рмирнНрмдрнБ
          рм╕рммрнБрммрнЗрм│рнЗ рм╕рм╣рмЬ рмУрмбрм╝рм┐рмЖрм░рнЗ, рмХрнГрм╖рмХрмЩрнНрмХ рм╕рм╣рм┐рмд рмХрмерм╛ рм╣рнЗрмЙрмЫрмирнНрмдрм┐ рммрнЛрм▓рм┐ рмнрм╛рммрм┐ рмЙрмдрнНрмдрм░ рмжрм┐рмЕрмирнНрмдрнБ.`
          ,
          'ml': `р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Хр╡Гр┤╖р┤┐AI р┤Жр┤гр╡Н, р┤Хр╡╝р┤╖р┤Хр╡╝р┤Хр╡Нр┤Хр╡Н р┤кр╡Нр┤░р┤╛р┤пр╡Лр┤Чр┤┐р┤Х р┤Йр┤кр┤жр╡Зр┤╢р┤Щр╡Нр┤Щр╡╛ р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤и р┤╕р╡Чр┤╣р╡Гр┤ж р┤╕р┤╣р┤╛р┤пр┤┐. р┤ир┤┐р┤Щр╡Нр┤Щр╡╛:
          - р┤▓р┤│р┤┐р┤др┤╡р╡Бр┤В р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤╡р╡Бр┤ор┤╛р┤п р┤нр┤╛р┤╖р┤пр┤┐р╡╜ р┤ор┤▒р╡Бр┤кр┤Яр┤┐ р┤ир╡╜р┤Хр╡Бр┤Х
          - р┤жр┤┐р┤ир┤╕р┤░р┤┐р┤пр┤┐р┤▓р╡Ж р┤нр┤╛р┤╖ р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х, р┤╕р┤╛р┤Щр╡Нр┤Хр╡Зр┤др┤┐р┤Х р┤кр┤жр┤Щр╡Нр┤Щр╡╛ р┤Тр┤┤р┤┐р┤╡р┤╛р┤Хр╡Нр┤Хр╡Бр┤Х
          - р┤ир┤Яр┤кр╡Нр┤кр┤╛р┤Хр╡Нр┤Хр┤╛р┤╡р╡Бр┤ир╡Нр┤и р┤кр╡Нр┤░р┤╛р┤пр╡Лр┤Чр┤┐р┤Х р┤ир┤┐р╡╝р┤жр╡Зр┤╢р┤Щр╡Нр┤Щр╡╛ р┤ир╡╜р┤Хр╡Бр┤Х
          - р┤кр╡Нр┤░р┤╛р┤жр╡Зр┤╢р┤┐р┤Х р┤╕р┤╛р┤╣р┤Ър┤░р╡Нр┤пр┤Щр╡Нр┤Щр┤│р╡Бр┤В р┤кр┤╛р┤░р┤ор╡Нр┤кр┤░р╡Нр┤пр┤Ьр╡Нр┤Юр┤╛р┤ир┤╡р╡Бр┤В р┤кр┤░р┤┐р┤Чр┤гр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х
          - р┤кр╡Нр┤░р╡Лр┤др╡Нр┤╕р┤╛р┤╣р┤Хр┤╡р╡Бр┤В р┤кр┤┐р┤ир╡Нр┤др╡Бр┤гр┤пр╡Бр┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤и р┤╕р┤ор╡Ар┤кр┤ир┤В р┤Хр╡Ир┤Хр╡Нр┤Хр╡Кр╡╛р┤Хр╡Нр┤Хр╡Бр┤Х
          - р┤Хр╡Бр┤▒р┤Юр╡Нр┤Ю р┤Ър╡Жр┤▓р┤╡р┤┐р╡╜ р┤кр┤░р┤┐р┤╣р┤╛р┤░р┤Щр╡Нр┤Щр╡╛ р┤ир┤┐р╡╝р┤жр╡Зр┤╢р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х
          - р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤╛р┤╢р┤╛р┤╕р╡Нр┤др╡Нр┤░р┤кр┤░р┤ор┤╛р┤п р┤Шр┤Яр┤Хр┤Щр╡Нр┤Щр╡╛ р┤Йр╡╛р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Бр┤Х
          - р┤╕р╡Нр┤ер┤┐р┤░р┤др┤пр╡Бр┤│р╡Нр┤│ р┤Хр╡Гр┤╖р┤┐ р┤░р╡Ар┤др┤┐р┤Хр╡╛ р┤ир┤┐р╡╝р┤жр╡Зр┤╢р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х
          - р┤╕р┤Вр┤╢р┤пр┤В р┤Йр┤гр╡Нр┤Яр╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤кр╡Нр┤░р┤╛р┤жр╡Зр┤╢р┤┐р┤Х р┤Хр┤╛р╡╝р┤╖р┤┐р┤Х р┤╡р┤┐р┤жр┤Чр╡Нр┤зр┤░р╡Бр┤ор┤╛р┤пр┤┐ р┤Жр┤╢р┤пр┤╡р┤┐р┤ир┤┐р┤ор┤пр┤В р┤ир┤Яр┤др╡Нр┤др┤╛р╡╗ р┤ир┤┐р╡╝р┤жр╡Зр┤╢р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х
          р┤Ор┤кр╡Нр┤кр╡Лр┤┤р╡Бр┤В р┤▓р┤│р┤┐р┤др┤ор┤╛р┤п р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜, р┤Хр╡╝р┤╖р┤Хр┤ир╡Лр┤Яр╡Н р┤╕р┤Вр┤╕р┤╛р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир┤др╡Бр┤кр╡Лр┤▓р╡Ж р┤ор┤▒р╡Бр┤кр┤Яр┤┐ р┤ир╡╜р┤Хр╡Бр┤Х.`
          ,
          'pa': `ридрйБри╕рйАриВ риХрйНри░ри┐ри╕ри╝рйАAI ри╣рйЛ, риЬрйЛ риХри┐ри╕ри╛риири╛риВ риирйВрй░ риХри╛ри░риЧри░ риЦрйЗридрйАримри╛рйЬрйА ри╕ри▓ри╛ри╣ рижри┐рй░рижри╛ риЗрй▒риХ рижрйЛри╕ридри╛риири╛ ри╕ри╣ри╛риЗриХ ри╣рйИред ридрйБри╣ри╛риирйВрй░ риЪри╛ри╣рйАрижри╛ ри╣рйИ:
          - ри╕ризри╛ри░риг риЕридрйЗ ри╕рикрй▒ри╕ри╝риЯ ринри╛ри╕ри╝ри╛ ри╡ри┐рй▒риЪ риЬри╡ри╛рим рижри┐риУ
          - ри░рйЛриЬри╝ри╛риири╛ рижрйА ринри╛ри╕ри╝ри╛ ри╡ри░ридрйЛ, ридриХриирйАриХрйА ри╕ри╝римрижри╛риВ ридрйЛриВ римриЪрйЛ
          - ри╡ри░ридрйЛриВрипрйЛриЧ, риХри╛ри░риЧри░ ри╕ри▓ри╛ри╣ рижри┐риУ
          - ри╕риери╛риириХ ри╣ри╛ри▓ри╛рид риЕридрйЗ ри░ри╡ри╛риЗридрйА риЧри┐риЖрии риирйВрй░ ризри┐риЖрии ри╡ри┐рй▒риЪ ри░рй▒риЦрйЛ
          - ри╣рйМри╕ри▓ри╛ риЕрилриЬри╝ри╛риИ риЕридрйЗ ри╕ри╣ри╛риЗриХ ри░ри╡рй▒риИриЖ ри░рй▒риЦрйЛ
          - риШрй▒риЯ риЦри░риЪ ри╡ри╛ри▓рйЗ ри╣рй▒ри▓ ри╕рйБриЭри╛риУ
          - риорйМри╕риорйА риЧрй▒ри▓ри╛риВ риирйВрй░ ри╕ри╝ри╛риори▓ риХри░рйЛ
          - риЯри┐риХри╛риК риЦрйЗридрйА рикрйНри░риери╛ри╡ри╛риВ рижрйА ри╕ри┐рилри╛ри░ри╕ри╝ риХри░рйЛ
          - риЕриЧри░ риЕри╕рикри╕ри╝риЯ ри╣рйЛри╡рйЗ ридри╛риВ ри╕риери╛риириХ риЦрйЗридрйА-римри╛рйЬрйА ри╡ри┐ри╕ри╝рйЗри╕ри╝риЬрй░риЬ риири╛ри▓ ри╕ри▓ри╛ри╣ ри▓риИ риХри╣рйЛ
          ри╣риорйЗри╕ри╝ри╛риВ ри╕ризри╛ри░риг рикрй░риЬри╛римрйА ри╡ри┐рй▒риЪ, риХри┐ри╕ри╛рии риири╛ри▓ риЧрй▒ри▓римри╛рид риХри░рижрйЗ ри╣рйЛриП риЬри┐ри╡рйЗриВ риЬри╡ри╛рим рижри┐риУ.`
        };

        const systemPrompt = systemPrompts[lang] || systemPrompts['en'];
        console.log('ЁЯТм System prompt length:', systemPrompt.length);
        
        // Combine system prompt with user query for Gemini
        const fullPrompt = `${systemPrompt}\n\nUser Question: ${query}`;
        
        const result = await model.generateContent(fullPrompt);
        const response = await result.response;
        const answer = response.text();

        console.log('тЬЕ Gemini Response received:', !!answer);
        return res.json({ answer });
        
      } catch (geminiError) {
        console.error('тЭМ Gemini Error:', geminiError.message);
        console.log('ЁЯФД Falling back to alternative responses...');
        // Fall through to fallback - don't return here
      }
    }

    // Fallback: use HuggingFace or OpenAI REST via axios if SDK key missing
    if (process.env.HUGGINGFACE_API_KEY) {
      console.log('ЁЯФД Trying HuggingFace fallback...');
      const hfResp = await axios.post(
        'https://api-inference.huggingface.co/models/gpt2',
        { inputs: query },
        { headers: { Authorization: `Bearer ${process.env.HUGGINGFACE_API_KEY}` } }
      );
      const answer = hfResp.data?.generated_text || hfResp.data?.[0]?.generated_text || 'No answer';
      return res.json({ answer });
    }

    // Final fallback: provide a basic response system
    console.log('тЪая╕П Using intelligent fallback responses');
    const fallbackResponses = {
      'en': {
        'yellow': 'Yellow leaves in crops can be caused by nutrient deficiency (especially nitrogen), overwatering, diseases, or pest damage. Check soil moisture, apply balanced fertilizer, and inspect for pests. Consider soil testing for accurate diagnosis.',
        'rice': 'The best time for rice planting depends on your region. Generally, plant during monsoon season (June-July in most areas). Ensure adequate water supply and prepare fields properly. Use certified seeds for better yield.',
        'pest': 'Natural pest control methods include neem oil spray, companion planting with marigolds, using sticky traps, encouraging beneficial insects, and maintaining good field hygiene. Crop rotation also helps reduce pest buildup.',
        'water': 'For water-efficient crops, consider millets, sorghum, chickpea, mustard, or drought-resistant varieties of your local crops. Use drip irrigation and mulching to conserve water. Rainwater harvesting is also beneficial.',
        'fertilizer': 'Use balanced NPK fertilizers based on soil testing. Organic options include compost, vermicompost, and green manure. Apply fertilizers in split doses for better efficiency and reduced wastage.',
        'crop': 'Choose crops based on your soil type, climate, and water availability. Consider market demand and storage facilities. Diversification helps reduce risk and improve income stability.',
        'disease': 'Common crop diseases can be prevented through proper sanitation, resistant varieties, and appropriate spacing. Use copper-based fungicides for organic treatment. Remove infected plants promptly.',
        'default': 'I\'m KrishiAI, your farming assistant. I can help with crop advice, pest management, fertilizers, and farming techniques. Please ask specific questions about your farming needs - I\'m here to help you succeed!'
      },
      'hi': {
        'yellow': 'рдлрд╕рд▓ рдореЗрдВ рдкреАрд▓реЗ рдкрддреНрддреЗ рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рдХреА рдХрдореА (рдЦрд╛рд╕рдХрд░ рдирд╛рдЗрдЯреНрд░реЛрдЬрди), рдЕрдзрд┐рдХ рдкрд╛рдиреА, рдмреАрдорд╛рд░реА рдпрд╛ рдХреАрдЯ рдХреЗ рдХрд╛рд░рдг рд╣реЛ рд╕рдХрддреЗ рд╣реИрдВред рдорд┐рдЯреНрдЯреА рдХреА рдирдореА рдЬрд╛рдВрдЪреЗрдВ, рд╕рдВрддреБрд▓рд┐рдд рдЦрд╛рдж рдбрд╛рд▓реЗрдВ рдФрд░ рдХреАрдЯреЛрдВ рдХреА рдЬрд╛рдВрдЪ рдХрд░реЗрдВред рд╕рдЯреАрдХ рдирд┐рджрд╛рди рдХреЗ рд▓рд┐рдП рдорд┐рдЯреНрдЯреА рдХреА рдЬрд╛рдВрдЪ рдХрд░рд╛рдПрдВред',
        'rice': 'рдзрд╛рди рдХреА рдмреБрдЖрдИ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рдордп рдЖрдкрдХреЗ рдХреНрд╖реЗрддреНрд░ рдкрд░ рдирд┐рд░реНрднрд░ рдХрд░рддрд╛ рд╣реИред рдЖрдорддреМрд░ рдкрд░ рдорд╛рдирд╕реВрди рдХреЗ рджреМрд░рд╛рди (рдЕрдзрд┐рдХрд╛рдВрд╢ рдХреНрд╖реЗрддреНрд░реЛрдВ рдореЗрдВ рдЬреВрди-рдЬреБрд▓рд╛рдИ) рдмреБрдЖрдИ рдХрд░реЗрдВред рдкрд░реНрдпрд╛рдкреНрдд рдкрд╛рдиреА рдФрд░ рдЦреЗрдд рдХреА рддреИрдпрд╛рд░реА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред рдмреЗрд╣рддрд░ рдЙрддреНрдкрд╛рджрди рдХреЗ рд▓рд┐рдП рдкреНрд░рдорд╛рдгрд┐рдд рдмреАрдЬ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред',
        'pest': 'рдкреНрд░рд╛рдХреГрддрд┐рдХ рдХреАрдЯ рдирд┐рдпрдВрддреНрд░рдг рдореЗрдВ рдиреАрдо рддреЗрд▓ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡, рдЧреЗрдВрджреЗ рдХреЗ рд╕рд╛рде рд╕рд╛рдереА рдЦреЗрддреА, рдЪрд┐рдкрдЪрд┐рдкреЗ рдЬрд╛рд▓, рд▓рд╛рднрдХрд╛рд░реА рдХреАрдЯреЛрдВ рдХреЛ рдмрдврд╝рд╛рд╡рд╛ рдФрд░ рдЦреЗрдд рдХреА рд╕рд╛рдл-рд╕рдлрд╛рдИ рд╢рд╛рдорд┐рд▓ рд╣реИред рдлрд╕рд▓ рдЪрдХреНрд░ рднреА рдХреАрдЯреЛрдВ рдХреЛ рдХрдо рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред',
        'water': 'рдкрд╛рдиреА рдХреА рдХрдореА рдХреЗ рд▓рд┐рдП рдмрд╛рдЬрд░рд╛, рдЬреНрд╡рд╛рд░, рдЪрдирд╛, рд╕рд░рд╕реЛрдВ рдпрд╛ рдЖрдкрдХреА рд╕реНрдерд╛рдиреАрдп рдлрд╕рд▓реЛрдВ рдХреА рд╕реВрдЦрд╛ рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЗрдВ рдЙрдЧрд╛рдПрдВред рдкрд╛рдиреА рдмрдЪрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдбреНрд░рд┐рдк рд╕рд┐рдВрдЪрд╛рдИ рдФрд░ рдорд▓реНрдЪрд┐рдВрдЧ рдХрд░реЗрдВред рд╡рд░реНрд╖рд╛ рдЬрд▓ рд╕рдВрдЪрдпрди рднреА рд▓рд╛рднрдХрд╛рд░реА рд╣реИред',
        'fertilizer': 'рдорд┐рдЯреНрдЯреА рдкрд░реАрдХреНрд╖рдг рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рд╕рдВрддреБрд▓рд┐рдд NPK рдЙрд░реНрд╡рд░рдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред рдЬреИрд╡рд┐рдХ рд╡рд┐рдХрд▓реНрдкреЛрдВ рдореЗрдВ рдХрдВрдкреЛрд╕реНрдЯ, рд╡рд░реНрдореАрдХрдВрдкреЛрд╕реНрдЯ рдФрд░ рд╣рд░реА рдЦрд╛рдж рд╢рд╛рдорд┐рд▓ рд╣реИрдВред рдмреЗрд╣рддрд░ рджрдХреНрд╖рддрд╛ рдХреЗ рд▓рд┐рдП рдЙрд░реНрд╡рд░рдХ рдХреЛ рднрд╛рдЧреЛрдВ рдореЗрдВ рдбрд╛рд▓реЗрдВред',
        'crop': 'рдЕрдкрдиреА рдорд┐рдЯреНрдЯреА рдХреЗ рдкреНрд░рдХрд╛рд░, рдЬрд▓рд╡рд╛рдпреБ рдФрд░ рдкрд╛рдиреА рдХреА рдЙрдкрд▓рдмреНрдзрддрд╛ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдлрд╕рд▓ рдЪреБрдиреЗрдВред рдмрд╛рдЬрд╛рд░ рдХреА рдорд╛рдВрдЧ рдФрд░ рднрдВрдбрд╛рд░рдг рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдкрд░ рд╡рд┐рдЪрд╛рд░ рдХрд░реЗрдВред рд╡рд┐рд╡рд┐рдзреАрдХрд░рдг рдЬреЛрдЦрд┐рдо рдХрдо рдХрд░рддрд╛ рд╣реИ рдФрд░ рдЖрдп рд╕реНрдерд┐рд░рддрд╛ рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░рддрд╛ рд╣реИред',
        'disease': 'рдЖрдо рдлрд╕рд▓ рд░реЛрдЧреЛрдВ рдХреЛ рдЙрдЪрд┐рдд рд╕рдлрд╛рдИ, рдкреНрд░рддрд┐рд░реЛрдзреА рдХрд┐рд╕реНрдореЛрдВ рдФрд░ рдЙрдкрдпреБрдХреНрдд рджреВрд░реА рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд░реЛрдХрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред рдЬреИрд╡рд┐рдХ рдЙрдкрдЪрд╛рд░ рдХреЗ рд▓рд┐рдП рддрд╛рдВрдмрд╛ рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢реА рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЛ рддреБрд░рдВрдд рд╣рдЯрд╛рдПрдВред',
        'default': 'рдореИрдВ рдХреГрд╖рд┐AI рд╣реВрдВ, рдЖрдкрдХрд╛ рдХреГрд╖рд┐ рд╕рд╣рд╛рдпрдХред рдореИрдВ рдлрд╕рд▓ рд╕рд▓рд╛рд╣, рдХреАрдЯ рдкреНрд░рдмрдВрдзрди, рдЙрд░реНрд╡рд░рдХ рдФрд░ рдХреГрд╖рд┐ рддрдХрдиреАрдХреЛрдВ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдХреГрд╖рд┐ рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╡рд┐рд╢рд┐рд╖реНрдЯ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ - рдореИрдВ рдЖрдкрдХреА рд╕рдлрд▓рддрд╛ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ!'
      }
    };

    const responses = fallbackResponses[lang] || fallbackResponses['en'];
    const queryLower = query.toLowerCase();
    
    let answer = responses['default'];
    for (const [key, value] of Object.entries(responses)) {
      if (key !== 'default' && queryLower.includes(key)) {
        answer = value;
        break;
      }
    }

    console.log('ЁЯУд Sending fallback response for query:', query);
    return res.json({ answer });
  } catch (err) {
    console.error('тЭМ Unexpected error in farmAI controller:', err.message);
    // Even if there's an unexpected error, provide a helpful response
    const errorResponse = {
      'en': 'I\'m experiencing technical difficulties right now, but I\'m still here to help! Please try asking your question again, or contact your local agricultural extension office for immediate assistance.',
      'hi': 'рдореБрдЭреЗ рдЕрднреА рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рд╣реЛ рд░рд╣реА рд╣реИ, рд▓реЗрдХрд┐рди рдореИрдВ рдЕрднреА рднреА рдЖрдкрдХреА рдорджрдж рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ! рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рдлрд┐рд░ рд╕реЗ рдкреВрдЫрдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ, рдпрд╛ рддрддреНрдХрд╛рд▓ рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рдЕрдкрдиреЗ рд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рд╡рд┐рд╕реНрддрд╛рд░ рдХрд╛рд░реНрдпрд╛рд▓рдп рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред'
    };
    const message = errorResponse[req.body.lang] || errorResponse['en'];
    return res.json({ answer: message });
  }
};

// For image-based disease detection using Google Gemini Vision
exports.diseaseDetection = async (req, res) => {
  if (!req.file) return res.status(400).json({ error: 'No image uploaded' });
  
  try {
    const imagePath = path.resolve(req.file.path);
    const lang = req.body.lang || 'en';
    
    // Try Google Gemini Vision first
    const geminiKey = process.env.GOOGLE_GEMINI_API_KEY;
    if (geminiKey) {
      try {
        const genAI = new GoogleGenerativeAI(geminiKey);
        const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
        
        // Read the image file
        const imageData = fs.readFileSync(imagePath);
        const base64Image = imageData.toString('base64');
        
        const imagePart = {
          inlineData: {
            data: base64Image,
            mimeType: req.file.mimetype
          }
        };
        
        // Create appropriate prompt based on language
        const prompts = {
          'en': `You are an expert agricultural AI assistant. Analyze this crop image and provide:
          1. Crop identification (if possible)
          2. Disease/pest/nutrient deficiency detection
          3. Severity assessment (mild/moderate/severe)
          4. Practical treatment recommendations
          5. Prevention measures for farmers
          
          Provide simple, farmer-friendly advice that can be easily understood and implemented. Focus on cost-effective solutions.`,
          
          'hi': `рдЖрдк рдПрдХ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рдХреГрд╖рд┐ AI рд╕рд╣рд╛рдпрдХ рд╣реИрдВред рдЗрд╕ рдлрд╕рд▓ рдХреА рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ рдФрд░ рдкреНрд░рджрд╛рди рдХрд░реЗрдВ:
          1. рдлрд╕рд▓ рдХреА рдкрд╣рдЪрд╛рди (рдпрджрд┐ рд╕рдВрднрд╡ рд╣реЛ)
          2. рд░реЛрдЧ/рдХреАрдЯ/рдкреЛрд╖рдХ рддрддреНрд╡ рдХреА рдХрдореА рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдирд╛
          3. рдЧрдВрднреАрд░рддрд╛ рдХрд╛ рдореВрд▓реНрдпрд╛рдВрдХрди (рд╣рд▓реНрдХрд╛/рдордзреНрдпрдо/рдЧрдВрднреАрд░)
          4. рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЙрдкрдЪрд╛рд░ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ
          5. рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдмрдЪрд╛рд╡ рдХреЗ рдЙрдкрд╛рдп
          
          рд╕рд░рд▓, рдХрд┐рд╕рд╛рди-рдЕрдиреБрдХреВрд▓ рд╕рд▓рд╛рд╣ рджреЗрдВ рдЬреЛ рдЖрд╕рд╛рдиреА рд╕реЗ рд╕рдордЭреА рдФрд░ рд▓рд╛рдЧреВ рдХреА рдЬрд╛ рд╕рдХреЗред рд▓рд╛рдЧрдд-рдкреНрд░рднрд╛рд╡реА рд╕рдорд╛рдзрд╛рдиреЛрдВ рдкрд░ рдзреНрдпрд╛рди рджреЗрдВред рд╣рд┐рдВрджреА рдореЗрдВ рдЙрддреНрддрд░ рджреЗрдВред`,
          
          'mr': `рддреБрдореНрд╣реА рдПрдХ рддрдЬреНрдЮ рдХреГрд╖реА AI рд╕рд╣рд╛рдпреНрдпрдХ рдЖрд╣рд╛рдд. рдпрд╛ рдкрд┐рдХрд╛рдЪреНрдпрд╛ рдкреНрд░рддрд┐рдореЗрдЪреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░рд╛ рдЖрдгрд┐ рджреНрдпрд╛:
          1. рдкрд┐рдХрд╛рдЪреА рдУрд│рдЦ (рд╢рдХреНрдп рдЕрд╕рд▓реНрдпрд╛рд╕)
          2. рд░реЛрдЧ/рдХреАрдЯрдХ/рдкреЛрд╖рдХ рддрддреНрд╡рд╛рдВрдЪреНрдпрд╛ рдХрдорддрд░рддреЗрдЪрд╛ рд╢реЛрдз
          3. рддреАрд╡реНрд░рддреЗрдЪреЗ рдореВрд▓реНрдпрд╛рдВрдХрди (рд╕реМрдореНрдп/рдордзреНрдпрдо/рдЧрдВрднреАрд░)
          4. рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЙрдкрдЪрд╛рд░ рд╢рд┐рдлрд╛рд░рд╕реА
          5. рд╢реЗрддрдХрд▒реНрдпрд╛рдВрд╕рд╛рдареА рдкреНрд░рддрд┐рдмрдВрдзрдХ рдЙрдкрд╛рдп
          
          рд╕реЛрдкрд╛, рд╢реЗрддрдХрд░реА-рдЕрдиреБрдХреВрд▓ рд╕рд▓реНрд▓рд╛ рджреНрдпрд╛ рдЬреЛ рд╕рд╣рдЬрдкрдгреЗ рд╕рдордЬрд▓рд╛ рдЖрдгрд┐ рдЕрдВрдорд▓рд╛рдд рдЖрдгрд▓рд╛ рдЬрд╛рдК рд╢рдХреЗрд▓. рдХрд┐рдлрд╛рдпрддрд╢реАрд░ рдЙрдкрд╛рдпрд╛рдВрд╡рд░ рд▓рдХреНрд╖ рдХреЗрдВрджреНрд░рд┐рдд рдХрд░рд╛. рдорд░рд╛рдареАрдд рдЙрддреНрддрд░ рджреНрдпрд╛ред`
        };
        
        const prompt = prompts[lang] || prompts['en'];
        
        const result = await model.generateContent([prompt, imagePart]);
        const response = await result.response;
        const analysisResult = response.text();
        
        // Remove temp file
        fs.unlinkSync(imagePath);
        
        console.log('тЬЕ Gemini Vision analysis completed');
        return res.json({ result: analysisResult });
        
      } catch (geminiError) {
        console.error('тЭМ Gemini Vision Error:', geminiError.message);
        // Fall back to ML service
      }
    }
    
    // Fallback: Forward image to ML service (Python backend)
    console.log('ЁЯФД Using ML service fallback for image analysis');
    const mlServiceUrl = process.env.ML_SERVICE_URL || 'http://localhost:5001/detect-disease';
    const formData = new FormData();
    formData.append('image', fs.createReadStream(imagePath));
    formData.append('lang', lang);
    
    const response = await axios.post(mlServiceUrl, formData, {
      headers: { ...formData.getHeaders() }
    });
    
    // Remove temp file
    fs.unlinkSync(imagePath);
    res.json({ result: response.data.result });
    
  } catch (err) {
    // Clean up temp file if it exists
    try {
      if (req.file && req.file.path) {
        fs.unlinkSync(path.resolve(req.file.path));
      }
    } catch (cleanupError) {
      console.error('Cleanup error:', cleanupError.message);
    }
    
    console.error('тЭМ Disease detection error:', err.message);
    
    // Provide helpful fallback response
    const errorResponses = {
      'en': 'I\'m having trouble analyzing the image right now. Please ensure the image is clear and shows the affected plant parts. You can also try uploading again or consult with your local agricultural expert.',
      'hi': 'рдореБрдЭреЗ рдЕрднреА рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░рдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рд╣реЛ рд░рд╣реА рд╣реИред рдХреГрдкрдпрд╛ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдЫрд╡рд┐ рд╕реНрдкрд╖реНрдЯ рд╣реИ рдФрд░ рдкреНрд░рднрд╛рд╡рд┐рдд рдкреМрдзреЗ рдХреЗ рд╣рд┐рд╕реНрд╕реЗ рджрд┐рдЦ рд░рд╣реЗ рд╣реИрдВред рдЖрдк рдлрд┐рд░ рд╕реЗ рдЕрдкрд▓реЛрдб рдХрд░рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рдпрд╛ рдЕрдкрдиреЗ рд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗ рд╕рдХрддреЗ рд╣реИрдВред',
      'mr': 'рдорд▓рд╛ рд╕рдзреНрдпрд╛ рдкреНрд░рддрд┐рдореЗрдЪреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░рдгреНрдпрд╛рдд рд╕рдорд╕реНрдпрд╛ рдпреЗрдд рдЖрд╣реЗ. рдХреГрдкрдпрд╛ рдЦрд╛рддреНрд░реА рдХрд░рд╛ рдХреА рдкреНрд░рддрд┐рдорд╛ рд╕реНрдкрд╖реНрдЯ рдЖрд╣реЗ рдЖрдгрд┐ рдкреНрд░рднрд╛рд╡рд┐рдд рд╡рдирд╕реНрдкрддреАрдЪреЗ рднрд╛рдЧ рджрд┐рд╕рдд рдЖрд╣реЗрдд. рддреБрдореНрд╣реА рдкреБрдиреНрд╣рд╛ рдЕрдкрд▓реЛрдб рдХрд░реВрди рдкрд╛рд╣реВ рд╢рдХрддрд╛ рдХрд┐рдВрд╡рд╛ рддреБрдордЪреНрдпрд╛ рд╕реНрдерд╛рдирд┐рдХ рдХреГрд╖реА рддрдЬреНрдЮрд╛рдЪрд╛ рд╕рд▓реНрд▓рд╛ рдШреЗрдК рд╢рдХрддрд╛.'
    };
    
    const lang = req.body.lang || 'en';
    const errorMessage = errorResponses[lang] || errorResponses['en'];
    
    res.status(500).json({ 
      error: 'Disease detection failed', 
      result: errorMessage,
      details: err.message 
    });
  }
};

// Translate arbitrary text to target language using Gemini
exports.translateText = async (req, res) => {
  try {
    const { text, targetLang } = req.body || {};
    if (!text || !targetLang) {
      return res.status(400).json({ message: 'text and targetLang are required' });
    }

    const geminiKey = process.env.GOOGLE_GEMINI_API_KEY;
    if (!geminiKey) {
      return res.status(500).json({ message: 'Gemini API key not configured' });
    }

    const langLabel =
      targetLang === 'hi' ? 'Hindi'
      : targetLang === 'mr' ? 'Marathi'
      : targetLang === 'ta' ? 'Tamil'
      : targetLang === 'bn' ? 'Bengali'
      : targetLang === 'te' ? 'Telugu'
      : targetLang === 'gu' ? 'Gujarati'
      : targetLang === 'kn' ? 'Kannada'
      : targetLang === 'or' ? 'Odia'
      : targetLang === 'ml' ? 'Malayalam'
      : targetLang === 'pa' ? 'Punjabi'
      : 'English';

    const genAI = new GoogleGenerativeAI(geminiKey);
    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });
    const prompt = `Translate the following text to ${langLabel}. Keep agricultural context, be simple and farmer-friendly. Output only the translated text without any additional commentary or quotes.\n\nText:\n${text}`;

    const result = await model.generateContent(prompt);
    const response = await result.response;
    const translated = (response.text && response.text()) || '';

    return res.json({ translated });
  } catch (err) {
    console.error('тЭМ Translation error:', err.message);
    return res.status(500).json({ message: 'Translation failed', details: err.message });
  }
};
